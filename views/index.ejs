<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AWS Media Tool - <%= pageTitle %></title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .hidden { display: none; }
        .btn {
            padding: 0.25rem 0.75rem;
            border-radius: 0.375rem;
            font-weight: 600;
            color: white;
            border: none;
            cursor: pointer;
            transition: background-color 0.2s;
        }
        .btn-green { background-color: #16a34a; }
        .btn-green:hover { background-color: #15803d; }
        .btn-red { background-color: #dc2626; }
        .btn-red:hover { background-color: #b91c1c; }
        .btn-gray { background-color: #6b7280; }
        .btn-gray:hover { background-color: #4b5563; }
        /* Style dla aktywnej zakładki */
        .tab-active {
            border-color: #3b82f6 !important;
            color: #2563eb !important;
        }
        /* Style dla panelu bocznego */
        .sidebar {
            min-height: calc(100vh - 2rem);
            background-color: #f3f4f6;
        }
        .event-item {
            cursor: pointer;
            transition: background-color 0.2s;
        }
        .event-item:hover {
            background-color: #e5e7eb;
        }
        .event-item.active {
            background-color: #dbeafe;
            border-left: 3px solid #3b82f6;
        }
    </style>
</head>
<body class="bg-gray-100 text-gray-800 font-sans">
    <div class="container-fluid mx-auto p-4">
        <!-- Nagłówek -->
        <header class="flex justify-between items-center mb-6 flex-wrap gap-4">
            <h1 class="text-3xl font-bold text-gray-700">AWS Media Tool <span class="text-xl font-normal text-blue-600">v1.5 (Node.js)</span></h1>
            <form action="/" method="GET" class="flex items-center space-x-2">
                <label for="region-select" class="text-sm font-medium text-gray-600">Region:</label>
                <select name="region" id="region-select" onchange="this.form.submit()" class="bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5">
                    <% if (availableRegions && availableRegions.length > 0) { %>
                        <% availableRegions.forEach(region => { %>
                            <option value="<%= region %>" <%= (region === currentRegion) ? 'selected' : '' %>>
                                <%= region %>
                            </option>
                        <% }); %>
                    <% } else if (currentRegion) { %>
                        <option value="<%= currentRegion %>" selected><%= currentRegion %></option>
                    <% } else { %>
                        <option>Wybierz region</option>
                    <% } %>
                </select>
            </form>
        </header>

        <!-- Główny layout dwukolumnowy -->
        <div class="flex gap-6">
            <!-- Panel boczny z listą eventów -->
            <aside class="w-80 sidebar bg-white rounded-xl shadow-md p-4">
                <div class="flex justify-between items-center mb-4">
                    <h2 class="text-lg font-semibold text-gray-700">Eventy</h2>
                    <button class="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded-lg text-sm font-medium">
                        + Nowy Event
                    </button>
                </div>
                <div id="events-list" class="space-y-2">
                    <!-- Lista eventów będzie dynamicznie załadowana tutaj -->
                    <div class="text-gray-500 text-sm p-4 text-center">Ładowanie eventów...</div>
                </div>
            </aside>

            <!-- Główna zawartość -->
            <main class="flex-1">
                <div class="space-y-8">
                    <% if (typeof error !== 'undefined' && error && error.length > 0) { %>
                        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg" role="alert">
                            <strong class="font-bold">Błąd!</strong> <span class="block sm:inline"><%= error %></span>
                        </div>
                    <% } %>
                    <% if (typeof message !== 'undefined' && message && message.length > 0) { %>
                        <div class="bg-<%= messageStatus === 'success' ? 'green' : 'red' %>-100 border border-<%= messageStatus === 'success' ? 'green' : 'red' %>-400 text-<%= messageStatus === 'success' ? 'green' : 'red' %>-700 px-4 py-3 rounded-lg" role="alert">
                            <strong class="font-bold"><%= messageStatus === 'success' ? 'Sukces!' : 'Błąd!' %></strong>
                            <span class="block sm:inline"><%= message %></span>
                        </div>
                    <% } %>

                    <!-- Formularze tworzenia zasobów -->
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                        <div class="bg-white p-6 rounded-xl shadow-md">
                            <h2 class="text-xl font-semibold mb-2">Krok 1: Stwórz nowy Input</h2>
                            <div class="border-b border-gray-200">
                                <nav class="-mb-px flex space-x-4" aria-label="Tabs">
                                    <button data-tab-target="rtmp" class="tab-button whitespace-nowrap py-3 px-1 border-b-2 font-medium text-sm border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 tab-active">RTMP Push</button>
                                    <button data-tab-target="mediaconnect" class="tab-button whitespace-nowrap py-3 px-1 border-b-2 font-medium text-sm border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300">MediaConnect</button>
                                    <button data-tab-target="mp4" id="mp4-tab-button" class="tab-button whitespace-nowrap py-3 px-1 border-b-2 font-medium text-sm border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300">MP4 (S3)</button>
                                    <button data-tab-target="link" class="tab-button whitespace-nowrap py-3 px-1 border-b-2 font-medium text-sm border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300">Link</button>
                                </nav>
                            </div>
                            <div class="pt-4">
                               <div id="panel-rtmp" class="tab-panel">
                                   <form action="/inputs/create-rtmp" method="POST">
                                        <input type="hidden" name="region" value="<%= currentRegion %>">
                                        <div class="mb-4">
                                            <label for="inputName" class="block text-sm font-bold text-gray-700 mb-2">Nazwa Inputu</label>
                                            <input type="text" id="inputName" name="inputName" placeholder="np. moj-stream-rtmp" class="shadow-sm w-full border rounded-lg py-2 px-3" required>
                                        </div>
                                        <div class="mb-4">
                                            <label class="block text-sm font-bold text-gray-700 mb-2">Klasa Inputu</label>
                                            <div class="flex items-center space-x-4">
                                                <label class="flex items-center"><input type="radio" name="inputClass" value="SINGLE_PIPELINE" class="form-radio"><span class="ml-2">Single</span></label>
                                                <label class="flex items-center"><input type="radio" name="inputClass" value="STANDARD" class="form-radio" checked><span class="ml-2">Standard</span></label>
                                            </div>
                                        </div>
                                        <div class="mb-4">
                                            <label for="securityGroupId" class="block text-sm font-bold text-gray-700 mb-2">Grupa Bezpieczeństwa</label>
                                            <select id="securityGroupId" name="securityGroupId" class="shadow-sm w-full border rounded-lg py-2 px-3" required>
                                                <% if (inputSecurityGroups && inputSecurityGroups.length > 0) { %>
                                                    <% inputSecurityGroups.forEach(sg => { %>
                                                        <option value="<%= sg.Id %>"><%= sg.Id %> (<%= Object.keys(sg.Tags || {}).length > 0 ? sg.Tags.Name || 'bez nazwy' : 'bez tagów' %>)</option>
                                                    <% }); %>
                                                <% } else { %>
                                                    <option value="" disabled>Brak grup bezpieczeństwa</option>
                                                <% } %>
                                            </select>
                                        </div>
                                        <button type="submit" class="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg" <% if (!currentRegion || !inputSecurityGroups || inputSecurityGroups.length === 0) { %>disabled<% } %>>Stwórz Input RTMP</button>
                                   </form>
                               </div>
                               <div id="panel-mediaconnect" class="tab-panel hidden">
                                   <form action="/inputs/create-mediaconnect" method="POST">
                                        <input type="hidden" name="region" value="<%= currentRegion %>">
                                        <div class="mb-4">
                                            <label for="inputNameMc" class="block text-sm font-bold text-gray-700 mb-2">Nazwa Inputu</label>
                                            <input type="text" id="inputNameMc" name="inputName" placeholder="np. moj-flow-mediaconnect" class="shadow-sm w-full border rounded-lg py-2 px-3" required>
                                        </div>
                                        <div class="mb-4">
                                            <label class="block text-sm font-bold text-gray-700 mb-2">Klasa Inputu</label>
                                            <div class="flex items-center space-x-4" id="mc-class-radios">
                                                <label class="flex items-center"><input type="radio" name="inputClassMc" value="SINGLE" class="form-radio" checked><span class="ml-2">Single</span></label>
                                                <label class="flex items-center"><input type="radio" name="inputClassMc" value="STANDARD" class="form-radio"><span class="ml-2">Standard</span></label>
                                            </div>
                                        </div>
                                        <div class="mb-4">
                                            <label for="flowArn1" class="block text-sm font-bold text-gray-700 mb-2">MediaConnect Flow (Pipeline 0)</label>
                                            <select id="flowArn1" name="flowArn1" class="shadow-sm w-full border rounded-lg py-2 px-3" required>
                                                <option value="" disabled selected>-- Wybierz flow --</option>
                                                <% if (mediaConnectFlows && mediaConnectFlows.length > 0) { %>
                                                    <% mediaConnectFlows.forEach(flow => { %>
                                                        <option value="<%= flow.FlowArn %>"><%= flow.Name %> (<%= flow.AvailabilityZone %> | <%= flow.Status %>)</option>
                                                    <% }); %>
                                                <% } else { %>
                                                    <option disabled>Brak flow w tym regionie</option>
                                                <% } %>
                                            </select>
                                        </div>
                                        <div id="mc-flow2-container" class="mb-4 hidden">
                                            <label for="flowArn2" class="block text-sm font-bold text-gray-700 mb-2">MediaConnect Flow (Pipeline 1)</label>
                                            <select id="flowArn2" name="flowArn2" class="shadow-sm w-full border rounded-lg py-2 px-3">
                                                <option value="">-- Wybierz drugi flow --</option>
                                                <% if (mediaConnectFlows && mediaConnectFlows.length > 0) { %>
                                                    <% mediaConnectFlows.forEach(flow => { %>
                                                        <option value="<%= flow.FlowArn %>"><%= flow.Name %> (<%= flow.AvailabilityZone %> | <%= flow.Status %>)</option>
                                                    <% }); %>
                                                <% } %>
                                            </select>
                                        </div>
                                        <button type="submit" class="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg" <% if (!mediaConnectFlows || mediaConnectFlows.length === 0) { %>disabled<% } %>>Stwórz Input MediaConnect</button>
                                   </form>
                               </div>
                               <div id="panel-mp4" class="tab-panel hidden">
                                   <form action="/inputs/create-mp4" method="POST">
                                        <input type="hidden" name="region" value="<%= currentRegion %>">
                                        <div class="mb-4">
                                            <label for="inputNameMp4" class="block text-sm font-bold text-gray-700 mb-2">Nazwa Inputu</label>
                                            <input type="text" id="inputNameMp4" name="inputName" placeholder="np. plik-z-s3" class="shadow-sm w-full border rounded-lg py-2 px-3" required>
                                        </div>
                                        <div class="mb-4">
                                            <label class="block text-sm font-bold text-gray-700 mb-2">Klasa Inputu</label>
                                            <div class="flex items-center space-x-4">
                                                <label class="flex items-center"><input type="radio" name="inputClass" value="SINGLE_PIPELINE" class="form-radio"><span class="ml-2">Single</span></label>
                                                <label class="flex items-center"><input type="radio" name="inputClass" value="STANDARD" class="form-radio" checked><span class="ml-2">Standard</span></label>
                                            </div>
                                        </div>
                                        <div class="mb-4">
                                            <label for="s3FilePath" class="block text-sm font-bold text-gray-700 mb-2">Wybierz plik .mp4</label>
                                            <select id="s3FilePath" name="s3FilePath" class="shadow-sm w-full border rounded-lg py-2 px-3" required disabled>
                                                <option>Kliknij zakładkę, aby załadować...</option>
                                            </select>
                                        </div>
                                        <button type="submit" id="createMp4Button" class="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg" disabled>Stwórz Input MP4</button>
                                   </form>
                               </div>
                               <div id="panel-link" class="tab-panel hidden">
                                    <form action="/inputs/create-link" method="POST">
                                        <input type="hidden" name="region" value="<%= currentRegion %>">
                                        <div class="mb-4">
                                            <label for="inputNameLink" class="block text-sm font-bold text-gray-700 mb-2">Nazwa Inputu</label>
                                            <input type="text" id="inputNameLink" name="inputName" placeholder="np. urzadzenie-link" class="shadow-sm w-full border rounded-lg py-2 px-3" required>
                                        </div>
                                        <div class="mb-4">
                                            <label class="block text-sm font-bold text-gray-700 mb-2">Klasa Inputu</label>
                                            <div class="flex items-center space-x-4" id="link-class-radios">
                                                <label class="flex items-center"><input type="radio" name="inputClassLink" value="SINGLE_PIPELINE" class="form-radio"><span class="ml-2">Single</span></label>
                                                <label class="flex items-center"><input type="radio" name="inputClassLink" value="STANDARD" class="form-radio" checked><span class="ml-2">Standard</span></label>
                                            </div>
                                        </div>
                                        <div class="mb-4">
                                            <label for="linkDeviceId1" class="block text-sm font-bold text-gray-700 mb-2">Urządzenie Link (Pipeline 0)</label>
                                            <select id="linkDeviceId1" name="linkDeviceId1" class="shadow-sm w-full border rounded-lg py-2 px-3" required>
                                                <option value="" disabled selected>-- Wybierz urządzenie --</option>
                                                <% if (linkDevices && linkDevices.length > 0) { %>
                                                    <% linkDevices.forEach(device => { %>
                                                        <option value="<%= device.Id %>"><%= device.Name %> (<%= device.AvailabilityZone %> | <%= device.ConnectionState %>)</option>
                                                    <% }); %>
                                                <% } else { %>
                                                    <option disabled>Brak dostępnych urządzeń Link</option>
                                                <% } %>
                                            </select>
                                        </div>
                                        <div id="link-device2-container" class="mb-4 hidden">
                                            <label for="linkDeviceId2" class="block text-sm font-bold text-gray-700 mb-2">Urządzenie Link (Pipeline 1)</label>
                                            <select id="linkDeviceId2" name="linkDeviceId2" class="shadow-sm w-full border rounded-lg py-2 px-3">
                                                <option value="">-- Wybierz drugie urządzenie --</option>
                                                <% if (linkDevices && linkDevices.length > 0) { %>
                                                    <% linkDevices.forEach(device => { %>
                                                        <option value="<%= device.Id %>"><%= device.Name %> (<%= device.AvailabilityZone %> | <%= device.ConnectionState %>)</option>
                                                    <% }); %>
                                                <% } %>
                                            </select>
                                        </div>
                                        <button type="submit" class="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg" <% if (!linkDevices || linkDevices.length === 0) { %>disabled<% } %>>Stwórz Input Link</button>
                                    </form>
                               </div>
                            </div>
                        </div>
                        <div class="bg-white p-6 rounded-xl shadow-md">
                            <h2 class="text-xl font-semibold mb-4 border-b pb-2">Krok 2: Stwórz nowy Kanał</h2>
                             <div class="pt-4">
                               <form action="/channels/create" method="POST">
                                    <input type="hidden" name="region" value="<%= currentRegion %>">
                                    <div class="mb-4">
                                        <label for="channelName" class="block text-sm font-bold text-gray-700 mb-2">Nazwa Kanału</label>
                                        <input type="text" id="channelName" name="channelName" placeholder="np. transmisja-live" class="shadow-sm w-full border rounded-lg py-2 px-3" required>
                                    </div>
                                    <div class="mb-4">
                                        <label for="inputId" class="block text-sm font-bold text-gray-700 mb-2">Wybierz Input</label>
                                        <select id="inputId" name="inputId" class="shadow-sm w-full border rounded-lg py-2 px-3" required>
                                            <option value="" disabled selected>-- Wybierz istniejący input --</option>
                                            <% if (inputs && inputs.length > 0) { %>
                                                <% inputs.forEach(input => { %>
                                                    <option value="<%= input.Id %>"><%= input.Name %> (<%= input.Type %>)</option>
                                                <% }); %>
                                            <% } else { %>
                                                <option disabled>Brak inputów do wyboru</option>
                                            <% } %>
                                        </select>
                                    </div>
                                    <div class="mb-4">
                                        <label for="channelClass" class="block text-sm font-bold text-gray-700 mb-2">Klasa Kanału</label>
                                        <select id="channelClass" name="channelClass" class="shadow-sm w-full border rounded-lg py-2 px-3">
                                            <option value="SINGLE_PIPELINE">Single Pipeline</option>
                                            <option value="STANDARD" selected>Standard (Dual Pipeline)</option>
                                        </select>
                                    </div>
                                    <div class="mb-4">
                                        <label for="mediaPackageChannelId" class="block text-sm font-bold text-gray-700 mb-2">Cel: Kanał MediaPackage</label>
                                        <select id="mediaPackageChannelId" name="mediaPackageChannelId" class="shadow-sm w-full border rounded-lg py-2 px-3" required>
                                            <option value="" disabled selected>-- Wybierz kanał MediaPackage --</option>
                                            <% if (mediaPackageChannels && mediaPackageChannels.length > 0) { %>
                                                <% mediaPackageChannels.forEach(mpChannel => { %>
                                                    <option value="<%= mpChannel.Id %>"><%= mpChannel.Id %></option>
                                                <% }); %>
                                            <% } else { %>
                                                <option disabled>Brak kanałów MediaPackage w tym regionie</option>
                                            <% } %>
                                        </select>
                                    </div>
                                    <button type="submit" class="w-full bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded-lg" <% if (!inputs || inputs.length === 0 || !mediaPackageChannels || mediaPackageChannels.length === 0) { %>disabled<% } %>>
                                        Stwórz Kanał
                                    </button>
                               </form>
                             </div>
                        </div>
                    </div>

                    <!-- Listy zasobów -->
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                        <div class="bg-white p-6 rounded-xl shadow-md">
                            <h2 class="text-xl font-semibold mb-4">Istniejące Inputy MediaLive</h2>
                            <div class="overflow-x-auto max-h-96">
                                <table class="min-w-full divide-y divide-gray-200">
                                    <thead class="bg-gray-50 sticky top-0">
                                        <tr>
                                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nazwa</th>
                                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Typ</th>
                                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Akcje</th>
                                        </tr>
                                    </thead>
                                    <tbody class="bg-white divide-y divide-gray-200">
                                        <% if (inputs && inputs.length > 0) { %>
                                            <% inputs.forEach(input => { %>
                                            <tr>
                                                <td class="px-6 py-4 whitespace-nowrap">
                                                    <div class="text-sm font-medium text-gray-900"><%= input.Name %></div>
                                                    <div class="text-xs text-gray-500"><%= input.Id %></div>
                                                </td>
                                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500"><%= input.Type %></td>
                                                <td class="px-6 py-4 whitespace-nowrap text-sm">
                                                     <% if (input.State === 'ATTACHED') { %>
                                                        <span class="px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800"><%= input.State %></span>
                                                    <% } else if (input.State === 'DETACHED') { %>
                                                        <span class="px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800"><%= input.State %></span>
                                                    <% } else { %>
                                                        <span class="px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800"><%= input.State %></span>
                                                    <% } %>
                                                </td>
                                                <td class="px-6 py-4 whitespace-nowrap text-sm">
                                                    <form action="/inputs/delete" method="POST" onsubmit="return confirm('Czy na pewno chcesz usunąć input <%= input.Name %>? Tej akcji nie można cofnąć.');">
                                                        <input type="hidden" name="inputId" value="<%= input.Id %>">
                                                        <input type="hidden" name="region" value="<%= currentRegion %>">
                                                        <button type="submit" class="btn btn-gray">Usuń</button>
                                                    </form>
                                                </td>
                                            </tr>
                                            <% }); %>
                                        <% } else { %>
                                            <tr><td colspan="4" class="px-6 py-4 text-center text-gray-500">Brak inputów w regionie <%= currentRegion %>.</td></tr>
                                        <% } %>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="bg-white p-6 rounded-xl shadow-md">
                            <h2 class="text-xl font-semibold mb-4">Istniejące Kanały MediaLive</h2>
                            <div class="overflow-x-auto max-h-96">
                                <table class="min-w-full divide-y divide-gray-200">
                                    <thead class="bg-gray-50 sticky top-0">
                                        <tr>
                                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nazwa</th>
                                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Akcje</th>
                                        </tr>
                                    </thead>
                                    <tbody class="bg-white divide-y divide-gray-200">
                                        <% if (channels && channels.length > 0) { %>
                                            <% channels.forEach(channel => { %>
                                                <tr>
                                                    <td class="px-6 py-4 whitespace-nowrap">
                                                        <div class="text-sm font-medium text-gray-900"><%= channel.Name %></div>
                                                        <div class="text-xs text-gray-500"><%= channel.Id %></div>
                                                    </td>
                                                    <td class="px-6 py-4 whitespace-nowrap text-sm">
                                                        <% if (channel.State === 'RUNNING') { %>
                                                            <span class="px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800"><%= channel.State %></span>
                                                        <% } else if (channel.State === 'IDLE') { %>
                                                            <span class="px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800"><%= channel.State %></span>
                                                        <% } else { %>
                                                            <span class="px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800"><%= channel.State %></span>
                                                        <% } %>
                                                    </td>
                                                    <td class="px-6 py-4 whitespace-nowrap text-sm">
                                                        <div class="flex items-center space-x-2">
                                                            <% if (channel.State === 'IDLE') { %>
                                                                <form action="/channels/start" method="POST">
                                                                    <input type="hidden" name="channelId" value="<%= channel.Id %>">
                                                                    <input type="hidden" name="region" value="<%= currentRegion %>">
                                                                    <button type="submit" class="btn btn-green">Start</button>
                                                                </form>
                                                            <% } %>
                                                            <% if (channel.State === 'RUNNING') { %>
                                                                <form action="/channels/stop" method="POST">
                                                                    <input type="hidden" name="channelId" value="<%= channel.Id %>">
                                                                    <input type="hidden" name="region" value="<%= currentRegion %>">
                                                                    <button type="submit" class="btn btn-red">Stop</button>
                                                                </form>
                                                            <% } %>
                                                            <form action="/channels/delete" method="POST" onsubmit="return confirm('Czy na pewno chcesz usunąć kanał <%= channel.Name %>? Tej akcji nie można cofnąć.');">
                                                                <input type="hidden" name="channelId" value="<%= channel.Id %>">
                                                                <input type="hidden" name="region" value="<%= currentRegion %>">
                                                                <button type="submit" class="btn btn-gray">Usuń</button>
                                                            </form>
                                                        </div>
                                                    </td>
                                                </tr>
                                            <% }); %>
                                        <% } else { %>
                                            <tr><td colspan="3" class="px-6 py-4 text-center text-gray-500">Brak kanałów w regionie <%= currentRegion %>.</td></tr>
                                        <% } %>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Logika pobierania i wyświetlania eventów
            async function loadEvents() {
                try {
                    const response = await fetch('/api/events');
                    if (!response.ok) throw new Error('Failed to fetch events');
                    
                    const data = await response.json();
                    const eventsList = document.getElementById('events-list');
                    
                    if (!data.events || Object.keys(data.events).length === 0) {
                        eventsList.innerHTML = '<div class="text-gray-500 text-sm p-4 text-center">Brak eventów. Kliknij "Nowy Event", aby utworzyć pierwszy.</div>';
                    } else {
                        eventsList.innerHTML = '';
                        Object.entries(data.events).forEach(([channelId, event]) => {
                            const eventItem = document.createElement('div');
                            eventItem.className = 'event-item p-3 rounded-lg border border-gray-200';
                            eventItem.dataset.channelId = channelId;
                            eventItem.innerHTML = `
                                <div class="font-medium text-gray-800">${event.eventName}</div>
                                <div class="text-xs text-gray-500 mt-1">ID: ${channelId}</div>
                            `;
                            eventItem.addEventListener('click', () => {
                                console.log('Clicked event:', event.eventName, channelId);
                                // Na razie tylko logujemy do konsoli
                            });
                            eventsList.appendChild(eventItem);
                        });
                    }
                } catch (error) {
                    console.error('Error loading events:', error);
                    const eventsList = document.getElementById('events-list');
                    eventsList.innerHTML = '<div class="text-red-500 text-sm p-4 text-center">Błąd podczas ładowania eventów.</div>';
                }
            }

            // Załaduj eventy po załadowaniu strony
            loadEvents();

            // Oryginalna logika zakładek
            const tabButtons = document.querySelectorAll('.tab-button');
            const tabPanels = document.querySelectorAll('.tab-panel');

            tabButtons.forEach(button => {
                button.addEventListener('click', () => {
                    tabButtons.forEach(btn => btn.classList.remove('tab-active'));
                    button.classList.add('tab-active');
                    const targetPanelId = button.getAttribute('data-tab-target');
                    tabPanels.forEach(panel => {
                        if (panel.id === `panel-${targetPanelId}`) {
                            panel.classList.remove('hidden');
                        } else {
                            panel.classList.add('hidden');
                        }
                    });
                });
            });

            // --- Logika dla dynamicznych formularzy ---
            
            // MediaConnect
            const mcRadios = document.getElementById('mc-class-radios');
            const mcFlow2Container = document.getElementById('mc-flow2-container');
            const mcFlow2Select = document.getElementById('flowArn2');
            if (mcRadios) {
                mcRadios.addEventListener('change', (event) => {
                    if (event.target.value === 'STANDARD') {
                        mcFlow2Container.classList.remove('hidden');
                        mcFlow2Select.required = true;
                    } else {
                        mcFlow2Container.classList.add('hidden');
                        mcFlow2Select.required = false;
                    }
                });
            }

            // Link
            const linkRadios = document.getElementById('link-class-radios');
            const linkDevice2Container = document.getElementById('link-device2-container');
            const linkDevice2Select = document.getElementById('linkDeviceId2');
            if (linkRadios) {
                linkRadios.addEventListener('change', (event) => {
                    if (event.target.value === 'STANDARD') {
                        linkDevice2Container.classList.remove('hidden');
                        linkDevice2Select.required = true;
                    } else {
                        linkDevice2Container.classList.add('hidden');
                        linkDevice2Select.required = false;
                    }
                });
            }

            // --- Logika dla zakładki MP4 (S3) ---
            const mp4TabButton = document.getElementById('mp4-tab-button');
            const s3Select = document.getElementById('s3FilePath');
            const createMp4Button = document.getElementById('createMp4Button');
            let s3AssetsLoaded = false;

            async function fetchS3Assets() {
                if (s3AssetsLoaded) return;

                try {
                    const response = await fetch('/api/s3-assets?region=eu-west-1');
                    if (!response.ok) {
                        const err = await response.json();
                        throw new Error(err.error || `Błąd serwera: ${response.status}`);
                    }
                    const assets = await response.json();
                    
                    s3Select.innerHTML = ''; 

                    if (assets.length > 0) {
                        assets.forEach(asset => {
                            const option = document.createElement('option');
                            option.value = asset;
                            option.textContent = asset.replace('<%= process.env.S3_ASSET_PREFIX || "" %>', '');
                            s3Select.appendChild(option);
                        });
                        s3Select.disabled = false;
                        createMp4Button.disabled = false;
                    } else {
                        const option = document.createElement('option');
                        option.textContent = 'Nie znaleziono plików .mp4';
                        option.disabled = true;
                        s3Select.appendChild(option);
                    }
                    s3AssetsLoaded = true;

                } catch (error) {
                    console.error("Fetch error:", error);
                    s3Select.innerHTML = '';
                    const option = document.createElement('option');
                    option.textContent = `Błąd: ${error.message}`;
                    option.disabled = true;
                    s3Select.appendChild(option);
                }
            }
            mp4TabButton.addEventListener('click', fetchS3Assets);
        });
    </script>
</body>
</html>